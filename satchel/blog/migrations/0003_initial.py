# Generated by Django 4.0.4 on 2022-05-20 06:05

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
        ('blog', '0002_initial'),
        ('project', '0001_initial'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='blogprojectrelationship',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_blog_relationship', to='project.projectpage'),
        ),
        migrations.AddField(
            model_name='blogpersonrelationship',
            name='blog',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_person_relationship', to='blog.blogpage'),
        ),
        migrations.AddField(
            model_name='blogpersonrelationship',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_blog_relationship', to='core.person'),
        ),
        migrations.AddField(
            model_name='blogpage',
            name='previous_blog',
            field=models.ForeignKey(blank=True, help_text='Previous blog post.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='blog.blogpage'),
        ),
        migrations.AddField(
            model_name='blogpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='blog.BlogTagRelationship', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='blogcategoryrelationship',
            name='blog',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_category_relationship', to='blog.blogpage'),
        ),
        migrations.AddField(
            model_name='blogcategoryrelationship',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_blog_relationship', to='core.category'),
        ),
        migrations.AlterUniqueTogether(
            name='blogprojectrelationship',
            unique_together={('blog', 'project')},
        ),
        migrations.AlterUniqueTogether(
            name='blogpersonrelationship',
            unique_together={('blog', 'person')},
        ),
        migrations.AlterUniqueTogether(
            name='blogcategoryrelationship',
            unique_together={('blog', 'category')},
        ),
    ]
