# Generated by Django 4.0.4 on 2022-05-20 06:05

import datetime
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.contrib.taggit
import modelcluster.fields
import wagtail.contrib.routable_page.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectIndexPage',
            fields=[
                ('flexpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.flexpage')),
            ],
            options={
                'abstract': False,
            },
            bases=(wagtail.contrib.routable_page.models.RoutablePageMixin, 'core.flexpage'),
        ),
        migrations.CreateModel(
            name='ProjectPage',
            fields=[
                ('flexpage_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.flexpage')),
                ('date_created', models.DateField(blank=True, default=datetime.datetime.today, help_text='Date of project inception.', null=True)),
                ('date_updated', models.DateField(blank=True, default=datetime.datetime.today, help_text='Date of last status change.', null=True)),
                ('status', models.CharField(choices=[('new', 'New Idea'), ('research', 'Research'), ('active', 'Active'), ('idle', 'Idle'), ('complete', 'Complete'), ('archive', 'Archived'), ('abandon', 'Abandoned')], default='new', help_text='Current project status.', max_length=20)),
            ],
            options={
                'abstract': False,
            },
            bases=('core.flexpage',),
        ),
        migrations.CreateModel(
            name='ProjectTagRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_tag_relationship', to='project.projectpage')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='projectpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(blank=True, help_text='A comma-separated list of tags.', through='project.ProjectTagRelationship', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='ProjectPersonRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_project_relationship', to='core.person')),
                ('project', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_person_relationship', to='project.projectpage')),
            ],
            options={
                'unique_together': {('project', 'person')},
            },
        ),
        migrations.CreateModel(
            name='ProjectCategoryRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_project_relationship', to='core.category')),
                ('project', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_category_relationship', to='project.projectpage')),
            ],
            options={
                'unique_together': {('project', 'category')},
            },
        ),
    ]
